{"version":3,"sources":["components/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","className","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAIaA,G,YAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,oCACE,8CAAgBH,IAChB,4BACEI,UAAU,SACVC,KAAK,SACLC,QAASL,GAHX,UAOA,4BACEG,UAAU,SACVC,KAAK,SACLC,QAASJ,GAHX,UAOA,4BACEE,UAAU,SACVC,KAAK,SACLC,QAASH,GAHX,eCoBWI,E,4MApCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,O,EAIzBE,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,WACJ,EAAKK,MAAMR,MAAS,IAAM,GAA0B,IAArB,EAAKQ,MAAMR,OAC7C,EAAKE,SAGP,EAAKD,U,uDAIL,OACE,kBAAC,EAAD,CACED,MAAOU,KAAKF,MAAMR,MAClBC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GA/BLQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ea815487.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.scss';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <>\n    <h1>{`Count : ${count}`}</h1>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={addOne}\n    >\n      addOne\n    </button>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={add100}\n    >\n      add100\n    </button>\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={increase}\n    >\n      increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  }\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  }\n\n  increase = () => {\n    if ((this.state.count) % 5 === 0 && this.state.count !== 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}